name: Build
description: Build
inputs:
  dockerHubUsername:
    description: ""
    required: true
  dockerHubToken:
    description: ""
    required: true
  arch:
    description: "Architecture"
    required: true
outputs:
  digests:
    description: Digests
    value: ${{ steps.push.outputs.digests }}
runs:
  using: composite
  steps:
    - name: Build
      shell: bash
      run: |-
        nix build -L -vv '.#defaultPackage.${{ inputs.arch }}-linux'

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.dockerHubUsername }}
        password: ${{ inputs.dockerHubToken }}

    - shell: bash
      run: chmod +r ~/.docker/config.json

    - name: Push
      shell: nix develop -v -c bash {0}
      id: push
      env:
        IMAGE_TAG: dev-${{ inputs.arch }}-${{ github.sha }}
      run: |-
        declare iac_version_bumper_digest fdb_server_digest fdb_configurator_digest

        iac_version_bumper_digest=$(./release.sh push_image iac-version-bumper "${IMAGE_TAG}")
        fdb_server_digest=$(./release.sh push_image fdb-server "${IMAGE_TAG}")
        fdb_configurator_digest=$(./release.sh push_image fdb-configurator "${IMAGE_TAG}")

        output='{"iac_version_bumper":"'${iac_version_bumper_digest}'","fdb_server":"'${fdb_server_digest}'","fdb_configurator":"'${fdb_configurator_digest}'"}'

        echo ::set-output name=digests::"${output}"
